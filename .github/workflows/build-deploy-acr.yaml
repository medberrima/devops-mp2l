name: Deploy to Azure Container App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  static-code-analysis-lint:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Run ESLint
      - name: Run ESLint
        run: |
          npm run lint

  unit-testing:
    needs: static-code-analysis-lint
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: |
          npm install

      # Run unit tests with Jest
      - name: Run Jest Tests
        run: |
          npm run test  # Runs the 'test' script defined in your package.json


  snyk-scan:
    needs: unit-testing
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      # Install dependencies
      - name: Install dependencies
        run: |
          npm install
      # Install Snyk CLI (if not already installed)
      - name: Install Snyk CLI
        run: npm install -g snyk
      # Authenticate with Snyk
      - name: Snyk Authenticate
        run: |
          snyk auth ${{ secrets.SNYK_TOKEN }}
      # Run Snyk test for vulnerabilities
      - name: Snyk Test for vulnerabilities
        run: |
          snyk test --all-projects --json

  build:
    needs: snyk-scan
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Log in to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Build and push the Docker image
      - name: Build & Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          no-cache: true
          tags: ${{ secrets.ACR_ENDPOINT }}/setechnextjsapp:latest  # Using 'latest' tag
          build-args: |
            CONTENTFUL_SPACE_ID=${{ secrets.NEXT_PUBLIC_CONTENTFUL_SPACE_ID }}
            CONTENTFUL_ACCESS_TOKEN=${{ secrets.NEXT_PUBLIC_CONTENTFUL_ACCESS_TOKEN }}

  deploy:
    needs: build  # This ensures the deploy job runs after the build job is successful
    runs-on: ubuntu-latest
    steps:
      # Authenticate to Azure using Service Principal
      - name: Authenticate to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy to Azure Container App
      - name: Deploy to Azure Container App
        run: |
          az containerapp update --name nextjscontainermp2l \
          --resource-group "nextjsappmp2l" \
          --image ${{ secrets.ACR_ENDPOINT }}/setechnextjsapp:latest  # Using 'latest' tag